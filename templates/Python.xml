<templateSet group="Python">
  <template name="main" value="if __name__ == '__main__':&#10;    main()" description="if __name__ == '__main__'" toReformat="false" toShortenFQNames="true">
    <context />
  </template>
  <template name="fnote" value="#!/usr/bin/env python&#10;# -*- coding: utf-8 -*-&#10;&#10;'''&#10;@File       :   $FILENAME$.py&#10;@Time       :   $DATE$ $TIME$&#10;@Author     :   helin&#10;@Version    :   1.0&#10;@Contact    :   spicalfreep@163.com&#10;@License    :   (C)Copyright 2019-2020&#10;@Desc       :   None&#10;&#10;@Modify Time      @Author     @Version    @Desciption&#10;------------      -------     --------    -----------&#10;$DATE$ $TIME$  helin       1.0         None&#10;'''&#10;" toReformat="true" toShortenFQNames="true">
    <variable name="FILENAME" expression="fileName()" defaultValue="" alwaysStopAt="false" />
    <variable name="DATE" expression="date()" defaultValue="" alwaysStopAt="false" />
    <variable name="TIME" expression="time()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="clas" value="class $NAME$(object):&#10;&#10;    def __init__(self):&#10;        &#10;       &#10;    def $FUNC$(self):&#10;        return self" description="def class function" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNC" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="def" value="def $NAME$():&#10;    &quot;&quot;&quot;&#10;    方法用于$END$&#10;    &quot;&quot;&quot;&#10;    return True" description="def func1" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="forr" value="for i in range(n):&#10;    $END$" description="for i in range5" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="if" value="if $END$:&#10;    &#10;else:&#10;    " description="def if" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="defm" value="def main():&#10;    &#10;    return True" description="def main func1" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="try" value="try:&#10;    $END$&#10;except AttributeError as e:&#10;    print('AttributeError:', e)" description="try catch" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fore" value="for key, value in enumerate($ITEMS$):&#10;    " description="for i in enum1" toReformat="false" toShortenFQNames="true">
    <variable name="ITEMS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fort" value="for k, v in attrs.items():&#10;    $END$" description="for k, v in attrs.items():" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="tryef" value="try:&#10;    $FIRST$&#10;except $ERROR$ as e:&#10;    print('except:', e)&#10;finally:&#10;    print('finally...')" description="try except finally" toReformat="true" toShortenFQNames="true">
    <variable name="FIRST" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ERROR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>